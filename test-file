#!/usr/bin/python

"""
This script performs the write-fsync-rename operation as fast as possible in
a tight loop.  It also applies an xattr to each file that should relate to the
file's contents.  Power should be pulled from a machine while this test is
running, then after it's brought back up, a thorough audit of all files and
their contents and extended attributes can be performed.
"""

import optparse
import xattr
import os
import random

num_files = 1000
padding = '\x08' * 8185

parser = optparse.OptionParser(usage="""usage: %prog [options] [directory]
        """ + __doc__)
parser.add_option('-c', '--check', dest='check', help='Run post-reboot audit')
parser.add_option('-n', '--nosync', action='store_true', dest='nosync',
                  help='Don\'t fsync files')
(options, args) = parser.parse_args()

if options.check:
    for file in os.listdir(args[0]):
        # cia style check on all file contents and attributes
        if file.startswith('.'):
            continue
        filename = os.path.join(args[0], file)
        fp = open(filename)
        data = fp.read()
        rand = xattr.getxattr(fp, 'rand')
        if data != rand + padding:
            print "bad data"
else:
    while True:
        for file in xrange(num_files):
            filename = os.path.join(args[0], str(file))
            tmpfile = os.path.join(args[0], '.tmp')
            fp = open(tmpfile, 'wb')
            rand = '%08X' % random.randrange(0, 0xFFFFFFFF)
            fp.write(rand)
            fp.write(padding)
            xattr.setxattr(fp, 'rand', rand)
            fp.flush()
            if not options.nosync:
                os.fdatasync(fp.fileno())
            fp.close()
            os.rename(tmpfile, filename)

